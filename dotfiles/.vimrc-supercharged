set encoding=utf-8
set nocompatible

" Pathogen
execute pathogen#infect()
execute pathogen#helptags()     
"flag problematic whitespace (trailing and spaces before tabs)
"Note you get the same by doing let c_space_errors=1 but
"this rule really applys to everything.
"highlight RedundantSpaces term=standout ctermfg=DarkRed ctermbg=black guifg=red
highlight RedundantSpaces ctermfg=DarkRed
"\ze sets end of match so only spaces highlighted
match RedundantSpaces /\s\+$\| \+\t/

set smartindent
set tabstop=2
set shiftwidth=2
set expandtab
set cursorline
set list
"set listchars=tab:▸-,trail:✖,eol:⏎
set listchars=tab:▸-,trail:✖
highlight SpecialKey ctermfg=Black
highlight NonText ctermfg=Black

"allow deleting selection without "updating" the clipboard (yank buffer)
vnoremap x "_x
vnoremap X "_X

"Reselect after indent so it can easily be repeated
vnoremap < <gv
vnoremap > >gv

"Auto-close delimiters
inoremap [  []<Left>
inoremap [<Space> [<Space><Space>]<Left><Left>
inoremap [] []
inoremap [[ [
inoremap (  ()<Left>
inoremap (<Space> (<Space><Space>)<Left><Left>
inoremap () ()
inoremap (( (
inoremap '  ''<Left>
inoremap '' ''
inoremap "  ""<Left>
inoremap "<Space> "<Space>
inoremap "" ""
inoremap {  {}<Left>
inoremap {<Space> {<Space><Space>}<Left><Left>
"Easily generate braces for code blocks
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{  {
inoremap {}  {}

"Smart abbreviations for common cases
  "Auto-add semi-colon/comma at the end of the current line
inoremap ;;  <Esc>A;
inoremap ,,  <Esc>A,

"Don't care about case when searching
set ignorecase
set incsearch
set hlsearch
set timeoutlen=800
set number
set ruler

syntax on
filetype on
au BufNewFile,BufRead *.pp set filetype=ruby
au BufNewFile,BufRead *.inc set filetype=php
au BufNewFile,BufRead *.module set filetype=php
au BufNewFile,BufRead *.install set filetype=php
au BufNewFile,BufRead *.test set filetype=php
au BufNewFile,BufRead *.profile set filetype=php

"Added from "vim after 11 years" (http://statico.github.io/vim.html)

" General utilities, - is the utility key
:let mapleader="-"
"Disable line numbers
:nmap <leader>l         :setlocal number!<CR>
"Remove highlighting to matches from last search
:nmap <leader>h         :set hlsearch!<CR>
:nmap <leader>p         :set paste!<CR>
:nmap <leader>n         :NERDTreeToggle<CR>
:nmap <leader>t         :tabnew<CR>
:nmap <leader>w         :w<CR>
:nmap <leader>W         :w<CR>
:nmap <leader>q         :q<CR>
:nmap <leader>Q         :q<CR>

"Quick edit/sourcing of personal .vimrc
:nmap <leader>.v        :e $MYVIMRC<CR>
:nmap <leader>sv        :source $MYVIMRC<CR>

" ==================================================
" Shortcuts for the surroundings plugin functionality
" ==================================================
  "Wrap [inner word] as array member, single quoted
:nmap <leader>ysi       ysiw]lysiw'
  "Wrap [all word] as array member, single quoted
:nmap <leader>ysa       ysaw]lysaw'
  "Change object member into array member, [Single|Double] quoted or [Variable]
:nmap <leader>moas      ysaw]lysaw'F[2h2xf]
:nmap <leader>moad      ysaw]lysaw"F[2h2xf]
:nmap <leader>moav      F$veS]ds}4lF[2h2xf]
  "Change array member [Variable|Single|Double] into object member
:nmap <leader>mavo      F[i-><ESC>4lcs]}w
:nmap <leader>maso      F[i-><ESC>4lds'ds]w
:nmap <leader>mado      F[i-><ESC>4lds"ds]w
  "Change surrounding from Paren into [Single|Double|Bracket|Curly]
:nmap <leader>csps      cs)'
:nmap <leader>cspd      cs)"
:nmap <leader>cspb      cs)]
:nmap <leader>cspc      cs)}
  "Change surrounding from Bracket into [Single|Double|Paren|Curly]
:nmap <leader>csbs      cs]'
:nmap <leader>csbd      cs]"
:nmap <leader>csbp      cs])
:nmap <leader>csbc      cs]}
  "Change surrounding from Curly into [Single|Double|Paren|Bracket]
:nmap <leader>cscs      cs}'
:nmap <leader>cscd      cs}"
:nmap <leader>cscp      cs})
:nmap <leader>cscb      cs}]
  "Change surrounding from Single into [Curly|Double|Paren|Bracket]
:nmap <leader>cssc      cs'}
:nmap <leader>cssd      cs'"
:nmap <leader>cssp      cs')
:nmap <leader>cssb      cs']
  "Change surrounding from Double into [Curly|Single|Paren|Bracket]
:nmap <leader>csdc      cs"}
:nmap <leader>csds      cs"'
:nmap <leader>csdp      cs")
:nmap <leader>csdb      cs"]
  "Delete [Double|Single|Bracket|Paren|Curly] surrounding
:nmap <leader>dsd       ds"
:nmap <leader>dss       ds'
:nmap <leader>dsb       ds]
:nmap <leader>dsp       ds)
:nmap <leader>dsc       ds}
  "Delete [Double|Single|Bracket|Paren|Curly] surrounding, including inner content.
:nmap <leader>dasd      F"vf"d
:nmap <leader>dass      F'vf'd
:nmap <leader>dasb      F[vf]d
:nmap <leader>dasp      F(vf)d
:nmap <leader>dasc      F{vf}d
  "Visual select all text within [Double|Single|Bracket|Paren|Curly] (included)
:nmap <leader>vsd       F"vf"
:nmap <leader>vss       F'vf'
:nmap <leader>vsb       F[v%
:nmap <leader>vsp       F(v%
:nmap <leader>vsc       F{v%
  " Add a [Bracket|Paren|Curly|Single] surround around Double-quote
:nmap <leader>sdb       F"vf"S]
:nmap <leader>sdp       F"vf"S)
:nmap <leader>sdc       F"vf"S}
:nmap <leader>sds       F"vf"S'
  " Add a [Bracket|Paren|Curly|Double] surround around Single-quote
:nmap <leader>ssb       F'vf'S]
:nmap <leader>ssp       F'vf'S)
:nmap <leader>ssc       F'vf'S}
:nmap <leader>ssd       F'vf'S"
  " Add a [Single|Paren|Curly|Double] surround around Bracket
:nmap <leader>sbs       F[v%S'
:nmap <leader>sbp       F[v%S)
:nmap <leader>sbc       F[v%S}
:nmap <leader>sbd       F[v%S"
  " Add a [Single|Bracket|Curly|Double] surround around Paren
:nmap <leader>sps       F(v%S'
:nmap <leader>spb       F(v%S]
:nmap <leader>spc       F(v%S}
:nmap <leader>spd       F(v%S"
  " Add a [Single|Bracket|Paren|Double] surround around Curly
:nmap <leader>scs       F{v%S'
:nmap <leader>scb       F{v%S]
:nmap <leader>scp       F{v%S)
:nmap <leader>scd       F{v%S"
  " Add a [Single|Bracket|Paren|Double|Curly] surround around Word
:nmap <leader>sws       ysiw'
:nmap <leader>swb       ysiw]
:nmap <leader>swp       ysiw)
:nmap <leader>swd       ysiw"
:nmap <leader>swc       ysiw}

"Move more naturally across wrapped lines
:nmap j gj
:nmap k gk

"Better tabs navigation
:nmap <C-l> gt
:nmap <C-h> gT

" NERDTree config
let NERDTreeNodeDelimiter = "\t"

" Tagbar config
nmap <F8> :TagbarToggle<CR>
let g:tagbar_width = 55

"Ctrl-P config
:let g:ctrlp_map = '<C-P>'
:let g:ctrlp_match_window_bottom = 0
:let g:ctrlp_match_window_reversed = 0
:let g:ctrlp_custom_ignore = '\v\~$|\.(o|swp|swo|pyc|wav|mp3|ogg|blend)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|__init__\.py'
:let g:ctrlp_working_path_mode = 0
:let g:ctrlp_dotfiles = 1
:let g:ctrlp_switch_buffer = 0

"Vdebug config
:let g:vdebug_options = {}
:let g:vdebug_options["watch_window_style"] = 'compact'
:let g:vdebug_options["continuous_mode"] = 1

"Powerline config
set laststatus=2
set t_Co=256

"Syntastic config
let g:syntastic_php_phpcs_args = "--standard=Drupal"

"Taggatron config
let g:tagcommands = {
\     "php" : {"cmd":"ctags","tagfile":".php.tags","args":"-R --fields=+laimS --languages=php --langmap=php:.engine.inc.module.theme.install.php --php-kinds=cdfi"}
\}
"let g:taggatron_verbose = 1

set omnifunc=phpcomplete#CompletePHP
let g:phpcomplete_enhance_jump_to_definition = 1
let g:phpcomplete_parse_docblock_comments = 1
